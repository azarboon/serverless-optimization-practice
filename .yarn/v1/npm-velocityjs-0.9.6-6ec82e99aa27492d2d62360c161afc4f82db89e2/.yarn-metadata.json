{
  "manifest": {
    "name": "velocityjs",
    "description": "Velocity Template Language(VTL) for JavaScript",
    "version": "0.9.6",
    "keywords": [
      "velocity template"
    ],
    "homepage": "http://git.shepherdwind.com/velocity.js/",
    "repository": {
      "type": "git",
      "url": "git://github.com/shepherdwind/velocity.js.git"
    },
    "engines": {
      "node": ">=0.8.0"
    },
    "main": "src/velocity.js",
    "bin": {
      "velocity": "bin/velocity"
    },
    "broswer": {
      "fs": false
    },
    "devDependencies": {
      "coveralls": "~2.11.2",
      "istanbul": "~0.3.5",
      "jison": ">=0.3",
      "mocha": ">=1.7.2",
      "mocha-lcov-reporter": "0.0.1",
      "should": "^7.0.1"
    },
    "scripts": {
      "test": "make test",
      "pub": "npm version patch && npm publish && git push origin master && git push origin --tag"
    },
    "spm": {
      "main": "index.js",
      "buildArgs": "--skip fs,path"
    },
    "_registry": "npm",
    "_loc": "/Users/mahdi.azarboon/Documents/dev-unsynced/optimization-practice/.yarn/v1/npm-velocityjs-0.9.6-6ec82e99aa27492d2d62360c161afc4f82db89e2/package.json",
    "readmeFilename": "README.md",
    "readme": "Velocity - Template Engine\n==========================\n\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/velocityjs.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/velocityjs\n[download-image]: https://img.shields.io/npm/dm/velocityjs.svg?style=flat-square\n[download-url]: https://npmjs.org/package/velocityjs\n[travis-image]: https://img.shields.io/travis/shepherdwind/velocity.js.svg?style=flat-square\n[travis-url]: https://travis-ci.org/shepherdwind/velocity.js\n[coveralls-image]: https://img.shields.io/coveralls/shepherdwind/velocity.js.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/shepherdwind/velocity.js?branch=master\n\n\nVelocityjs is [velocity](http://velocity.apache.org/) template engine for javascript.\n\n[中文版文档](./README-cn.md)\n\n## Features\n\n- Supports both client and server side use.\n- Separation of parsing and rendering templates.\n- The basic syntax is fully supported all java version velocity.\n- [Vim Syntax](https://github.com/shepherdwind/vim-velocity) for vim.\n\n## Install\n\nvia npm:\n\n```bash\n$ npm install velocityjs\n```\n\n## Broswer\n\nCompatible all modern broswer, You can try [test case](http://git.shepherdwind.com/velocity.js/runner/tests.html) on your browser to test it.\n\nFor other lower version broswer, you need have those polyfill function.\n\n1. Array.prototype map, forEach, some, filter, every, indexOf\n2. Date.now\n3. Object.keys\n\n## Examples\n\nYou can find a lot of examples from the tests directory. There is no different between the use of browser and NodeJs.\n\n## Public API\n\n```\n{\n  // render method\n  render(vm: string, context?: Object, macros?: Object): string;\n\n  parse(vm: string, config?: Object, ignorespace?: boolean): Array<Ast>;\n\n  Compile: {\n    (asts: Array<Ast>, config?: Object): {\n      render(context?: Object, macros?: Object);\n    };\n  };\n}\n```\n\n### render\n\nparams:\n\n- vm {string} velocity string input\n- context {object} render context, data or function for vm\n- macros {object} such as `#include('path/xxx')` , you can define you `inlcude` macro function\n\n```js\nvar Velocity = require('velocityjs');\n\nVelocity.render('string of velocity', context, macros);\n```\n\n#### context\n\n`context` is an object or undefined, for vm `$foo.bar`, data look up path will be `context.foo.bar`.\n`context` can have method, and call it just on velocity string.\n\nThe method of context, will have `eval` method on `this` of inner method body. You can `eval` to rerender velocity string, such as test code [$control.setTemplate](https://github.com/shepherdwind/velocity.js/blob/master/tests/compile.js#L532).\n\n\n### Compile and parse\n\n`parse` method can parse vm, and return ast tree of velocity.\n\n`Compile` will render asts to result string.\n\n```\nvar Compile = Velocity.Compile;\n\nvar asts = Velocity.parse('string of velocity');\n(new Compile(asts)).render(context, macros);\n```\n\n#### Compile\n\nparams:\n\n- asts {array} array of vm asts tree\n- config {object} you can define some option for Compile\n\n##### config\n\n- escape {boolean} default `true`, default escape variable to html encode, you can set false to close it.\n- unescape {object} define the object, which key do not need escape. For example, set unescape equal `{control: true}`, so `$control.html` will not escape.\n- env {string} when env equal `development` will throw error when null values are used\n\n#### parse\n\nparams:\n\n- vm {string} string to parse\n- blocks {object} self define blocks, such as `#cms(1) hello #end`, you can set `{cms: true}`\n- ignorespace {boolean} if set true, then ignore the newline trim.\n\n## Syntax\n\nSyntax you can find from [velocity user guide](http://velocity.apache.org/engine/devel/user-guide.html)。\n\n### Directives\n\nDirectives supports have `set`, `foreach`, `if|else|elseif`, `macro`, `break`, `stop`.\n\nSome othe directive `evaluate`, `define`, `parse`, do not supported default, but You can realize by context or macros, for example [parse](https://github.com/shepherdwind/velocity.js/blob/master/tests/compile.js#L627)\n\n## Questions\n\nYou can find help from those ways:\n\n1. New [issue](https://github.com/shepherdwind/velocity.js/issues/new)\n2. Email to eward.song at gmail.com\n3. 阿里内部员工，可以通过 hanwen.sah 搜到我的旺旺\n\n## Other\n\nRecommend an other [velocity](https://github.com/fool2fish/velocity).\n\n## License\n\n(The MIT License)\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2012-2013 Eward Song<eward.song at gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
    "license": "MIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/velocityjs/-/velocityjs-0.9.6.tgz#6ec82e99aa27492d2d62360c161afc4f82db89e2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/velocityjs/-/velocityjs-0.9.6.tgz",
    "hash": "6ec82e99aa27492d2d62360c161afc4f82db89e2",
    "registry": "npm",
    "packageName": "velocityjs"
  },
  "registry": "npm",
  "hash": "6ec82e99aa27492d2d62360c161afc4f82db89e2"
}