{
  "manifest": {
    "name": "mimos",
    "description": "Mime database interface",
    "version": "3.0.3",
    "repository": {
      "type": "git",
      "url": "git://github.com/hapijs/mimos"
    },
    "main": "lib/index.js",
    "keywords": [
      "mime",
      "database",
      "content-type"
    ],
    "engines": {
      "node": ">=4.0.0"
    },
    "dependencies": {
      "hoek": "4.x.x",
      "mime-db": "1.x.x"
    },
    "devDependencies": {
      "code": "3.x.x",
      "lab": "10.x.x"
    },
    "scripts": {
      "test": "lab -m 5000 -t 100 -v -La code"
    },
    "license": "BSD-3-Clause",
    "_registry": "npm",
    "_loc": "/Users/mahdi.azarboon/Documents/dev-unsynced/optimization-practice/.yarn/v1/npm-mimos-3.0.3-b9109072ad378c2b72f6a0101c43ddfb2b36641f/package.json",
    "readmeFilename": "README.md",
    "readme": "#mimos\n\nMime database interface.\n\n[![Build Status](https://secure.travis-ci.org/hapijs/mimos.svg)](http://travis-ci.org/hapijs/mimos)\n[![Current Version](https://img.shields.io/npm/v/mimos.svg)](https://www.npmjs.com/package/mimos)\n\nLead Maintainer - [Adam Bretz](https://github.com/arb)\n\nMimos is a convenience class for retrieving mime information objects.\n\n## Usage\n\n### `new Mimos([options])`\n\nCreates a new Mimos object where:\n\n- `[options]` - an option object the following keys\n    - `[override]` - an object hash that is merged into the built in mime information specified [here](https://github.com/jshttp/mime-db). Each key value pair represents a single mime object. Each override value should follow this schema:\n        - `key` - the key is the lower-cased correct mime-type. (Ex. \"application/javascript\").\n        - `value` - the value should an object following the specifications outlined [here](https://github.com/jshttp/mime-db#data-structure). Additional values include:\n          - `type` - specify the `type` value of result objects, defaults to `key`. See the example below for more clarification.\n          - `predicate` - method with signature `function(mime)` when this mime type is found in the database, this function will run. This allows you make customizations to `mime` based on developer criteria.\n\n### `mimos.path(path)`\n\nReturns mime object where:\n\n- `path` path to file including the file extension. Uses the `extension` values of the mime objects for lookup.\n\n```js\nconst mimos = new Mimos();\nconst mime = mimos.path('/static/public/app.js');\n// mime\n/*\n{\n  source: 'iana',\n  charset: 'UTF-8',\n  compressible: true,\n  extensions: [ 'js' ],\n  type: 'application/javascript'\n}\n*/\n```\n\n### `mimos.type(type)`\n\nReturns mime object where:\n\n- `type` the content-type to find mime information about. Uses the `type` values of the mime objects for lookup.\n\n```js\nconst mimos = new Mimos();\nconst mime = mimos.type('text/plain');\n// mime\n/*\n{\n  source: 'iana',\n  compressible: true,\n  extensions: ['txt', 'text', 'conf', 'def', 'list', 'log', 'in', 'ini'],\n  type: 'text/plain'\n}\n*/\n```\n\n### Override Example\n\nIn certain situations, it can be helpful to override the built in mime type information. The optional argument to the Mimos constructor is used to override and add mime information. Below is an example to help understand how this works.\n\n```js\n\nconst options = {\n    override: {\n        'node/module': {\n            source: 'iana',\n            compressible: true,\n            extensions: ['node', 'module', 'npm'],\n            type: 'node/module'\n        },\n        'application/javascript': {\n            source: 'iana',\n            charset: 'UTF-8',\n            compressible: true,\n            extensions: ['js', 'javascript'],\n            type: 'text/javascript'\n        },\n        'text/html': {\n            predicate: function(mime) {\n                if (someCondition) {\n                    mime.foo = 'test';\n                }\n                else {\n                    mime.foo = 'bar';\n                }\n                return mime;\n            }\n        }\n    }\n}\n\nconst mimos = new Mimos(options);\nconsole.dir(mimos.path('./node_modules/mimos.module'));\n/*\n{\n  source: 'iana',\n  compressible: true,\n  extensions: ['node', 'module', 'npm'],\n  type: 'node/module'\n}\n*/\nconsole.dir(mimos.type('application/javascript'));\n/*\nNote: even though we asked for type 'application/javascript', the type value is 'text/javascript' because of the override. Always use the proper content-type for retrieval.\n{\n  source: 'iana',\n  charset: 'UTF-8',\n  compressible: true,\n  extensions: ['js', 'javascript'],\n  type: 'text/javascript'\n}\n*/\nconsole.dir(mimos.type('text/html'));\n/*\nsomeCondition is true:\n{\n  source: 'iana',\n  compressible: true,\n  extensions: ['html','htm'],\n  type: 'test/html',\n  foo: 'test'\n}\n\nsomeCondition is false:\n{\n  source: 'iana',\n  compressible: true,\n  extensions: ['html','htm'],\n  type: 'test/html',\n  foo: 'bar'\n}\n*/\n```\n",
    "licenseText": "Copyright (c) 2014-2016, Project contributors\nCopyright (c) 2014, Walmart\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * The names of any contributors may not be used to endorse or promote\n      products derived from this software without specific prior written\n      permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n                                  *   *   *\n\nThe complete list of contributors can be found at: https://github.com/hapijs/mimos/graphs/contributors\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mimos/-/mimos-3.0.3.tgz#b9109072ad378c2b72f6a0101c43ddfb2b36641f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mimos/-/mimos-3.0.3.tgz",
    "hash": "b9109072ad378c2b72f6a0101c43ddfb2b36641f",
    "registry": "npm",
    "packageName": "mimos"
  },
  "registry": "npm",
  "hash": "b9109072ad378c2b72f6a0101c43ddfb2b36641f"
}