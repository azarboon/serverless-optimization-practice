{
  "manifest": {
    "name": "isemail",
    "version": "1.2.0",
    "author": {
      "name": "Eli Skeggs",
      "email": "skeggse@gmail.com"
    },
    "description": "validate an email address according to RFCs 5321, 5322, and others",
    "main": "./index",
    "scripts": {
      "test": "lab -r console -o stdout -r lcov -o coverage.lcov -a code -L",
      "test-cov-html": "lab -r html -o coverage.html -a code"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/hapijs/isemail.git"
    },
    "homepage": "https://github.com/hapijs/isemail",
    "bugs": {
      "url": "https://github.com/hapijs/isemail/issues"
    },
    "keywords": [
      "isemail",
      "validation",
      "check",
      "checking",
      "verification",
      "email",
      "address",
      "email address"
    ],
    "devDependencies": {
      "code": "^1.5.0",
      "lab": "^5.16.1"
    },
    "license": "BSD-2-Clause",
    "engines": {
      "node": ">=0.10"
    },
    "_registry": "npm",
    "_loc": "/Users/mahdi.azarboon/Documents/dev-unsynced/optimization-practice/.yarn/v1/npm-isemail-1.2.0-be03df8cc3e29de4d2c5df6501263f1fa4595e9a/package.json",
    "readmeFilename": "README.md",
    "readme": "isemail\n=======\n\nNode email address validation library\n\n[![Build Status](https://travis-ci.org/hapijs/isemail.png)](https://travis-ci.org/hapijs/isemail)\n[![Coverage Status](https://coveralls.io/repos/hapijs/isemail/badge.png?branch=master)](https://coveralls.io/r/hapijs/isemail?branch=master)\n\nLead Maintainer: [Eli Skeggs](https://github.com/skeggse)\n\nThis first version of `isemail` is a port of the PHP `is_email` function by Dominic Sayers.\n\nInstall\n-------\n\n```sh\n$ npm install isemail\n```\n\nTest\n----\n\nThe tests were pulled from is_email's extensive [test suite][tests] on October 15, 2013. Many thanks to the contributors! Additional tests have been added to increase code coverage and verify edge-cases.\n\nRun any of the following.\n\n```sh\n$ lab\n$ npm test\n$ make test\n```\n\n_remember to_ `npm install`!\n\nAPI\n---\n\n### isEmail(email, [options], [callback])\n\nDetermines whether the `email` is valid or not, for various definitions thereof. Optionally accepts an `options` object and a `callback` function. Options may include `errorLevel` and `checkDNS`. The `callback` function will always be called if specified, and the result of the operation supplied as the only parameter to the callback function. If `isEmail` is not asked to check for the existence of the domain (`checkDNS`), it will also synchronously return the result of the operation.\n\nUse `errorLevel` to specify the type of result for `isEmail`. Passing a `false` literal will result in a true or false boolean indicating whether the email address is sufficiently defined for use in sending an email. Passing a `true` literal will result in a more granular numeric status, with zero being a perfectly valid email address. Passing a number will return `0` if the numeric status is below the `errorLevel` and the numeric status otherwise.\n\nThe `tldWhitelist` option can be either an object lookup table or an array of valid top-level domains. If the email address has a top-level domain that is not in the whitelist, the email will be marked as invalid.\n\nThe `minDomainAtoms` option is an optional positive integer that specifies the minimum number of domain atoms that must be included for the email address to be considered valid. Be careful with the option, as some top-level domains, like `io`, directly support email addresses. To better handle fringe cases like the `io` TLD, use the `checkDNS` parameter, which will only allow email addresses for domains which have an MX record.\n\n#### Examples\n\n```js\n$ node\n> var isEmail = require('isemail');\nundefined\n> var log = console.log.bind(console, 'result');\nundefined\n> isEmail('test@iana.org');\ntrue\n> isEmail('test@iana.org', log);\nresult true\ntrue\n> isEmail('test@iana.org', {checkDNS: true});\nundefined\n> isEmail('test@iana.org', {checkDNS: true}, log);\nundefined\nresult true\n> isEmail('test@iana.org', {errorLevel: true});\n0\n> isEmail('test@iana.org', {errorLevel: true}, log);\nresult 0\n0\n> isEmail('test@e.com');\ntrue\n> isEmail('test@e.com', {checkDNS: true, errorLevel: true}, log);\nundefined\nresult 6\n> isEmail('test@e.com', {checkDNS: true, errorLevel: 7}, log);\nundefined\nresult 0\n> isEmail('test@e.com', {checkDNS: true, errorLevel: 6}, log);\nundefined\nresult 6\n```\n\nTODO\n====\n\nAdd tests for library usage, not just functionality comparisons.\nFuture versions will improve upon the current version, optimizing it for efficient usage and DRYing the code.\n\nLicense\n=======\n\n[BSD License](http://www.opensource.org/licenses/bsd-license.php)\n\n[tests]: http://isemail.info/_system/is_email/test/?all‎ \"is_email test suite\"\n",
    "licenseText": "Copyright © 2008-2011, Dominic Sayers\nCopyright © 2013-2014, GlobeSherpa\nCopyright © 2014-2015, Eli Skeggs\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n- Neither the name of Dominic Sayers nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/isemail/-/isemail-1.2.0.tgz#be03df8cc3e29de4d2c5df6501263f1fa4595e9a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/isemail/-/isemail-1.2.0.tgz",
    "hash": "be03df8cc3e29de4d2c5df6501263f1fa4595e9a",
    "registry": "npm",
    "packageName": "isemail"
  },
  "registry": "npm",
  "hash": "be03df8cc3e29de4d2c5df6501263f1fa4595e9a"
}