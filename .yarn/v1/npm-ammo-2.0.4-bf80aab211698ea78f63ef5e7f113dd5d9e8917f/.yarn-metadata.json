{
  "manifest": {
    "name": "ammo",
    "description": "HTTP Range processing utilities",
    "version": "2.0.4",
    "repository": {
      "type": "git",
      "url": "git://github.com/hapijs/ammo"
    },
    "main": "lib/index.js",
    "keywords": [
      "http",
      "range",
      "utilities"
    ],
    "engines": {
      "node": ">=4.0.0"
    },
    "dependencies": {
      "boom": "5.x.x",
      "hoek": "4.x.x"
    },
    "devDependencies": {
      "code": "4.x.x",
      "lab": "13.x.x",
      "wreck": "12.x.x"
    },
    "scripts": {
      "test": "lab -a code -t 100 -L",
      "test-cov-html": "lab -a code -r html -o coverage.html"
    },
    "license": "BSD-3-Clause",
    "_registry": "npm",
    "_loc": "/Users/mahdi.azarboon/Documents/dev-unsynced/optimization-practice/.yarn/v1/npm-ammo-2.0.4-bf80aab211698ea78f63ef5e7f113dd5d9e8917f/package.json",
    "readmeFilename": "README.md",
    "readme": "# ammo\n\nHTTP Range processing utilities.\n\n[![Npm Version](https://img.shields.io/npm/v/ammo.svg)](https://npmjs.com/package/ammo)\n[![Build Status](https://secure.travis-ci.org/hapijs/ammo.png)](http://travis-ci.org/hapijs/ammo)\n\nLead Maintainer - [Eran Hammer](https://github.com/hueniverse)\n\n## Usage\n\n```js\n// basic usage\nconst range = Ammo.header('bytes=1-5', 10);\n// range --> [{ from: 1, to: 5 }]\n\n// multiple ranges\nconst range = Ammo.header('bytes=1-5,7-10', 10);\n// range --> [{ from: 1, to: 5 }, { from: 7, to: 9 }]\n\n// streams (get range within a `source`)\nconst range = Ammo.header('bytes=1000-4000', 5000);\nconst stream = new Ammo.Stream(range[0]);\nWreck.read(source.pipe(stream), {}, (err, buffer) => {\n    // buffer is the portion of source within range\n\n});\n```\n\n## API\n\n### `header(header, length)`\n\nParses the range from a HTTP header.\n\n* `header` - A string in the form of `bytes=from-to`, where `from` and `to` are\nintegers specifying the range. Both are optional. Multiple ranges can be passed\nas a comma delimited list.\n* `length` - A positive integer specifying the maximum length the range can\ncover. If a `to` value passed in the `header` string is greater than `length`,\nthe `to` value is set as `length - 1`.\n\nReturns an array of objects with the properties `from` and `to`, which specify\nthe beginning and ending of the range. Overlapping ranges are combined into one\nobject. Returns `null` for invalid input.\n\n### `new Ammo.Stream(range)`\n\nCreates a [`Transform Stream`](https://nodejs.org/api/stream.html) that extracts\nthe portion of a piped in stream within `range`.\n* `range` - an object with the properties `from` and `to` that specify the range\nof the piped in stream to read. Objects returned by `Ammo.header` can be passed\ninto `range`.\n",
    "licenseText": "Copyright (c) 2014-2017, Project contributors\nCopyright (c) 2014, Walmart\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * The names of any contributors may not be used to endorse or promote\n      products derived from this software without specific prior written\n      permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n                                  *   *   *\n\nThe complete list of contributors can be found at: https://github.com/hapijs/ammo/graphs/contributors\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ammo/-/ammo-2.0.4.tgz#bf80aab211698ea78f63ef5e7f113dd5d9e8917f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ammo/-/ammo-2.0.4.tgz",
    "hash": "bf80aab211698ea78f63ef5e7f113dd5d9e8917f",
    "registry": "npm",
    "packageName": "ammo"
  },
  "registry": "npm",
  "hash": "bf80aab211698ea78f63ef5e7f113dd5d9e8917f"
}